import pytest
from cvxopt.base import matrix
from cvxopt.solvers import sdp
from cvxopt.base import spmatrix

@pytest.mark.parametrize("nv, ne, e_list, x_list", [
(8, 7, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7], [11, 11, 12, 12, 20, 20, 21, 21, 23, 23, 29, 29, 46, 46, 0, 9, 18, 27, 36, 45, 54, 63]),
(6, 6, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6], [1, 1, 2, 2, 8, 8, 10, 10, 15, 15, 16, 16, 0, 7, 14, 21, 28, 35]),
(8, 9, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9], [5, 5, 6, 6, 12, 12, 13, 13, 21, 21, 22, 22, 28, 28, 31, 31, 39, 39, 0, 9, 18, 27, 36, 45, 54, 63]),
(6, 7, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7], [2, 2, 4, 4, 9, 9, 10, 10, 11, 11, 15, 15, 17, 17, 0, 7, 14, 21, 28, 35]),
(6, 6, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6], [1, 1, 11, 11, 17, 17, 22, 22, 23, 23, 29, 29, 0, 7, 14, 21, 28, 35]),
(7, 10, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 10, 10, 10, 10], [1, 1, 5, 5, 9, 9, 10, 10, 11, 11, 12, 12, 17, 17, 25, 25, 26, 26, 27, 27, 0, 8, 16, 24, 32, 40, 48]),
(7, 8, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8], [1, 1, 3, 3, 5, 5, 12, 12, 19, 19, 20, 20, 34, 34, 41, 41, 0, 8, 16, 24, 32, 40, 48]),
(9, 12, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12], [3, 3, 4, 4, 5, 5, 8, 8, 16, 16, 21, 21, 23, 23, 32, 32, 33, 33, 35, 35, 61, 61, 71, 71, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(8, 10, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10], [4, 4, 6, 6, 12, 12, 13, 13, 19, 19, 21, 21, 23, 23, 28, 28, 30, 30, 39, 39, 0, 9, 18, 27, 36, 45, 54, 63]),
(7, 8, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8], [3, 3, 9, 9, 11, 11, 12, 12, 18, 18, 19, 19, 20, 20, 34, 34, 0, 8, 16, 24, 32, 40, 48]),
(9, 16, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16], [1, 1, 3, 3, 7, 7, 8, 8, 11, 11, 23, 23, 24, 24, 25, 25, 34, 34, 35, 35, 43, 43, 44, 44, 51, 51, 61, 61, 62, 62, 71, 71, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(5, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4], [3, 3, 13, 13, 14, 14, 19, 19, 0, 6, 12, 18, 24]),
(8, 12, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12], [5, 5, 6, 6, 7, 7, 12, 12, 13, 13, 14, 14, 15, 15, 22, 22, 28, 28, 31, 31, 47, 47, 55, 55, 0, 9, 18, 27, 36, 45, 54, 63]),
(9, 16, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16], [1, 1, 3, 3, 4, 4, 5, 5, 8, 8, 17, 17, 21, 21, 22, 22, 24, 24, 26, 26, 31, 31, 41, 41, 42, 42, 44, 44, 51, 51, 62, 62, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(7, 6, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6], [4, 4, 5, 5, 18, 18, 25, 25, 26, 26, 33, 33, 0, 8, 16, 24, 32, 40, 48]),
(9, 13, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13], [3, 3, 5, 5, 11, 11, 12, 12, 13, 13, 23, 23, 24, 24, 26, 26, 32, 32, 41, 41, 44, 44, 51, 51, 53, 53, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(9, 11, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11], [2, 2, 7, 7, 13, 13, 16, 16, 34, 34, 35, 35, 41, 41, 43, 43, 51, 51, 61, 61, 62, 62, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(9, 17, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17], [1, 1, 2, 2, 4, 4, 6, 6, 7, 7, 8, 8, 11, 11, 12, 12, 13, 13, 15, 15, 23, 23, 26, 26, 32, 32, 33, 33, 42, 42, 62, 62, 71, 71, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(7, 9, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9], [1, 1, 2, 2, 4, 4, 5, 5, 9, 9, 10, 10, 18, 18, 25, 25, 41, 41, 0, 8, 16, 24, 32, 40, 48]),
(7, 10, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 10, 10, 10, 10], [1, 1, 3, 3, 5, 5, 10, 10, 12, 12, 13, 13, 17, 17, 18, 18, 27, 27, 34, 34, 0, 8, 16, 24, 32, 40, 48]),
(6, 7, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7], [2, 2, 3, 3, 4, 4, 5, 5, 9, 9, 11, 11, 23, 23, 0, 7, 14, 21, 28, 35]),
(9, 14, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14], [2, 2, 6, 6, 8, 8, 13, 13, 17, 17, 24, 24, 25, 25, 26, 26, 31, 31, 35, 35, 41, 41, 42, 42, 53, 53, 62, 62, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(8, 14, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14], [3, 3, 4, 4, 5, 5, 7, 7, 14, 14, 15, 15, 20, 20, 21, 21, 28, 28, 29, 29, 30, 30, 37, 37, 39, 39, 46, 46, 0, 9, 18, 27, 36, 45, 54, 63]),
(5, 5, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5], [1, 1, 7, 7, 8, 8, 9, 9, 19, 19, 0, 6, 12, 18, 24]),
(6, 7, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7], [1, 1, 4, 4, 9, 9, 16, 16, 17, 17, 23, 23, 29, 29, 0, 7, 14, 21, 28, 35]),
(5, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4], [4, 4, 8, 8, 14, 14, 19, 19, 0, 6, 12, 18, 24]),
(7, 9, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9], [2, 2, 3, 3, 9, 9, 12, 12, 17, 17, 18, 18, 19, 19, 27, 27, 33, 33, 0, 8, 16, 24, 32, 40, 48]),
(8, 11, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11], [1, 1, 6, 6, 14, 14, 15, 15, 20, 20, 21, 21, 30, 30, 38, 38, 39, 39, 47, 47, 55, 55, 0, 9, 18, 27, 36, 45, 54, 63]),
(7, 6, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6], [1, 1, 3, 3, 9, 9, 11, 11, 18, 18, 27, 27, 0, 8, 16, 24, 32, 40, 48]),
(8, 7, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7], [4, 4, 7, 7, 13, 13, 28, 28, 37, 37, 39, 39, 47, 47, 0, 9, 18, 27, 36, 45, 54, 63]),
(5, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4], [2, 2, 4, 4, 13, 13, 19, 19, 0, 6, 12, 18, 24]),
(5, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4], [2, 2, 3, 3, 14, 14, 19, 19, 0, 6, 12, 18, 24]),
(9, 17, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17], [5, 5, 6, 6, 7, 7, 13, 13, 14, 14, 17, 17, 21, 21, 23, 23, 25, 25, 31, 31, 34, 34, 41, 41, 42, 42, 44, 44, 53, 53, 62, 62, 71, 71, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(7, 8, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8], [2, 2, 5, 5, 19, 19, 20, 20, 25, 25, 26, 26, 33, 33, 41, 41, 0, 8, 16, 24, 32, 40, 48]),
(7, 7, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7], [10, 10, 11, 11, 13, 13, 18, 18, 25, 25, 26, 26, 33, 33, 0, 8, 16, 24, 32, 40, 48]),
(9, 15, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15], [3, 3, 4, 4, 8, 8, 13, 13, 15, 15, 21, 21, 31, 31, 32, 32, 33, 33, 41, 41, 42, 42, 51, 51, 53, 53, 61, 61, 62, 62, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(5, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4], [1, 1, 2, 2, 4, 4, 13, 13, 0, 6, 12, 18, 24]),
(5, 3, [0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3], [13, 13, 14, 14, 19, 19, 0, 6, 12, 18, 24]),
(6, 5, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5], [1, 1, 2, 2, 4, 4, 5, 5, 11, 11, 0, 7, 14, 21, 28, 35]),
(6, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4], [4, 4, 16, 16, 22, 22, 23, 23, 0, 7, 14, 21, 28, 35]),
(9, 17, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17], [2, 2, 3, 3, 4, 4, 8, 8, 11, 11, 12, 12, 14, 14, 15, 15, 17, 17, 22, 22, 23, 23, 31, 31, 32, 32, 34, 34, 41, 41, 43, 43, 62, 62, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(8, 7, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7], [7, 7, 14, 14, 21, 21, 22, 22, 23, 23, 30, 30, 46, 46, 0, 9, 18, 27, 36, 45, 54, 63]),
(9, 11, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11], [7, 7, 11, 11, 21, 21, 23, 23, 31, 31, 33, 33, 41, 41, 42, 42, 43, 43, 52, 52, 61, 61, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(5, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4], [3, 3, 8, 8, 9, 9, 13, 13, 0, 6, 12, 18, 24]),
(8, 12, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12], [1, 1, 2, 2, 3, 3, 10, 10, 11, 11, 13, 13, 14, 14, 19, 19, 23, 23, 30, 30, 38, 38, 47, 47, 0, 9, 18, 27, 36, 45, 54, 63]),
(6, 6, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6], [2, 2, 3, 3, 9, 9, 10, 10, 22, 22, 23, 23, 0, 7, 14, 21, 28, 35]),
(6, 4, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4], [1, 1, 4, 4, 22, 22, 29, 29, 0, 7, 14, 21, 28, 35]),
(9, 14, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14], [1, 1, 2, 2, 4, 4, 5, 5, 12, 12, 31, 31, 32, 32, 41, 41, 43, 43, 44, 44, 51, 51, 53, 53, 61, 61, 62, 62, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
(7, 9, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9], [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 11, 11, 17, 17, 19, 19, 25, 25, 0, 8, 16, 24, 32, 40, 48]),
(9, 15, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15], [2, 2, 3, 3, 6, 6, 7, 7, 12, 12, 14, 14, 15, 15, 21, 21, 22, 22, 23, 23, 25, 25, 41, 41, 44, 44, 53, 53, 71, 71, 0, 10, 20, 30, 40, 50, 60, 70, 80]),
])
def test_windows_sdp(nv, ne, e_list, x_list) -> None:
    # initialise g sparse (to values -1, based on two list that
    # define index and one that defines shape
    print(nv, ne, e_list, x_list)
    g_sparse = spmatrix(-1, x_list, e_list, (nv*nv, ne+1))

    # Initialise optimization parameters
    h = matrix(-1.0, (nv, nv))
    c = matrix([0.0]*ne + [1.0])

    # Solve the convex optimization problem
    # Should raise here on windows
    sol = sdp(c, Gs=[g_sparse], hs=[h])
    assert sol is not None
